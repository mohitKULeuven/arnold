int: n;
int: capacity;
array[1..5] of int:profit;
array[1..5] of int:size;
array[1..5] of var int:x;
constraint forall(a in 1..5)(-capacity <= -x[a]);
constraint forall(a in 1..5)(sum(a in 1..5) (-profit[a]) <= -x[a]);
constraint (sum(a in 1..5) (-x[a]) <= -n);
constraint (sum(a in 1..5) (x[a]) <= capacity);
constraint forall(a in 1..5)(sum(a in 1..5) (-x[a]) <= -profit[a]);
constraint forall(a in 1..5)(sum(a in 1..5) (-x[a]) <= -size[a]);
constraint forall(a in 1..5) ( 0 <= x[a]);
solve satisfy;